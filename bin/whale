#!/usr/bin/env ruby
# whale

# 20110907

require '../lib/0'

switches = (
  Switches.new do |s|
    s.banner = 'Usage: whale <url> and any of the following options...'
    s.set(:url){'The location of the phishing form.'}
    s.set(:f, :form, :form_name){'If left empty, the first form on the page will be used.'}
    s.set(:n, :form_number){'This will set the number of the form in order of appearance on the page.  Use zero-based indexing.'}
    s.set(:user_field, :username_field, :user_field_name, :username_field_name){'The name of the username field.'}
    s.set(:user_field_number, :username_field_number){'The position of the username field in relation to the form it is attached to.  Use zero-based indexing.'}
    s.set(:pass_field, :password_field, :pass_field_name, :password_field_name){'The name of the password field.'}
    s.set(:pass_field_number, :password_field_number){'The position of the password field in relation to the form it is attached to.  Use zero-based indexing.'}
    s.set(:v?, :verbose?){'Outputs each submission as it goes.'}
    s.set(:e?, :username_is_email_address?){'Automatically generate a username which is in the form of an email address.'}
    s.set(:a, :user_agent){'What webclient I should pretend to be.'}
    # s.set :help
    # s.set :version
  end
)

url = (
  if (ARGV[0] !~ /^-/ && ARGV[0])
    ARGV[0]
  elsif switches.url
    switches.url
  else
    raise RuntimeError, 'No URL provided.'
  end
)

w = Whale.new(url, switches.to_h)
#p w
w.counter_phish
