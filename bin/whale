#!/usr/bin/env ruby
# whale

# 20061009
# 0.1.0

# Description: Sometimes when they go fishing, they get a whale and it sinks their boat.  

# History: 
# 1. I took #read_words_file from difflist.  
# 2. I took a bit of RandomMethod for #random_word.   

# Changes since 0.0: 
# 1. It now has a verbose mode which will output the username and password which has been randomly generating just prior to it being submitted.  

# Todo: 
# 1. Command line options library needed really, since fixed order options is a bit bler.  

require 'rubygems'
require 'mechanize'
#require 'pp'

class Whale
  
  def initialize(url, form_name, username_field_name, password_field_name, verbose = false)
    @url, @form_name, @username_field_name, @password_field_name, @verbose_mode= url, form_name, username_field_name, password_field_name, verbose
    @words = read_words_file('/usr/share/dict/words')
    @words_size = @words.size # It is more efficient for this to be called once here.  
  end
  
  def counter_phish
    m = WWW::Mechanize.new
    loop do
      page = m.get(@url)
      #pp page  #debug
      form = page.form(@form_name)
      form.fields.find {|f| f.name == @username_field_name}.value = random_word
      print "#{random_word}:" if @verbose
      form.fields.find {|f| f.name == @password_field_name}.value = random_word
      puts "#{random_word}" if @verbose
      m.submit(form)
    end
  end
  
  private
  
  def read_words_file(filename)
    a = []
    File.open(filename, 'r').each {|line| a << line.chomp }
    a
  end
  
  def random_word
    @words[rand(@words_size)]
  end
  
end

if __FILE__ == $0
  w = Whale.new(ARGV[0], ARGV[1], ARGV[2], ARGV[3], ARGV[4])
  w.counter_phish
end
