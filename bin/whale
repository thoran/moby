#!/usr/bin/env ruby
# whale

# 20061009
# 0.0.7

# Description: Sometimes when they go fishing, they get a whale and it sinks their boat.  

# History: 
# 1. I took #read_words_file from difflist.  
# 2. I took a bit of RandomMethod for #random_word.   

# Changes: 
# 1. It is mostly complete now.  It should read in the words file and submit one only counter_phish.  
# 2. I need to be able to get it to find the form field names dynamically (based on inputs) and send wouldn't do it.  So hopefully Mike's block approach has been kept by Aaron.  Fingers crossed...  
# 3. Iteration is now placed around the form filling bits with a simple non-stop loop.  I'm expecting that I don't need to keep fetching the page once I have it; that is unless there is some kind of tracking going on.  
# 4. Oops, I reset the value of page!  
# 5. That didn't do it some more goes in the loop.  I don't think is right somehow, I should be able to reuse the variables

# Todo: 
# 1. Iterate infinitely over the @words array and hammer the fuckers.  Really done as of 0.0.7.  

require 'rubygems'
require 'mechanize'
require 'pp'

class Whale
  
  def initialize(url, form_name, username_field_name, password_field_name)
    @url, @form_name, @username_field_name, @password_field_name = url, form_name, username_field_name, password_field_name
    @words = read_words_file('/usr/share/dict/words')
    @words_size = @words.size # It is more efficient for this to be called once here.  
  end
  
  def counter_phish
    m = WWW::Mechanize.new
    loop do
      page = m.get(@url)
      pp page  #debug
      form = page.form(@form_name)
      form.fields.find {|f| f.name == @username_field_name}.value = random_word
      form.fields.find {|f| f.name == @password_field_name}.value = random_word
      pp m.submit(form)  #part_debug
    end
  end
  
  private
  
  def read_words_file(filename)
    a = []
    File.open(filename, 'r').each {|line| a << line.chomp }
    a
  end
  
  def random_word
    @words[rand(@words_size)]
  end
  
end

if __FILE__ == $0
  w = Whale.new(ARGV[0], ARGV[1], ARGV[2], ARGV[3])
  w.counter_phish
end
