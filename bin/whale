#!/usr/bin/env ruby
# whale

# 20190815
# 0.7.0

# Description: Sometimes when they go fishing, they get a whale and it sinks their boat.

lib_dir = File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib'))
$LOAD_PATH.unshift(lib_dir) unless $LOAD_PATH.include?(lib_dir)

require 'Switches'
require 'Whale'

VERSION_STRING = '0.7.0'

def switches
  Switches.new do |s|
    s.banner = 'Usage: whale <url> and any of the following options...'
    s.set(:url){'The location of the phishing form.'}
    s.set(:f, :form, :form_name){'If left empty, the first form on the page will be used.'}
    s.set(:n, :form_number){'This will set the number of the form in order of appearance on the page.  Use zero-based indexing.'}
    s.set(:user_field, :username_field, :user_field_name, :username_field_name){'The name of the username field.'}
    s.set(:user_field_number, :username_field_number){'The position of the username field in relation to the form it is attached to.  Use zero-based indexing.'}
    s.set(:pass_field, :password_field, :pass_field_name, :password_field_name){'The name of the password field.'}
    s.set(:pass_field_number, :password_field_number){'The position of the password field in relation to the form it is attached to.  Use zero-based indexing.'}
    s.set(:v?, :verbose?){'Outputs each submission as it goes.'}
    s.set(:e?, :username_is_email_address?){'Automatically generate a username which is in the form of an email address.'}
    s.set(:username_prefilled){'No need to supply an email address in the form.'}
    s.set(:a, :user_agent){'What webclient I should pretend to be.'}
    s.set(:help){'Usage: whale <url> and any of the following options...'}
    s.set(:version){VERSION_STRING}
    s.set(:debug?){'Show debugging information.'}
    s.set(:username_hostname){'The hostname to be used when the username is an email address.'}
  end
end

def main
  args = switches.to_h
  debug = args[:debug?]
  form_name = args[:form_name]
  form_number = args[:form_number]
  password_field_name = args[:password_field_name]
  password_field_number = args[:password_field_number]
  url = args[:url]
  user_agent = args[:user_agent]
  username_field_name = args[:username_field_name]
  username_field_number = args[:username_field_number]
  username_hostname = args[:username_hostname]
  username_is_email_address = args[:username_is_email_address?]
  verbose = args[:verbose?]
  whale = Whale.new(
    debug: debug,
    form_name: form_name,
    form_number: form_number,
    password_field_name: password_field_name,
    password_field_number: password_field_number,
    url: url,
    user_agent: user_agent,
    username_field_name: username_field_name,
    username_field_number: username_field_number,
    username_hostname: username_hostname,
    username_is_email_address: username_is_email_address,
    verbose: verbose
  )
  whale.counter_phish
end

main
